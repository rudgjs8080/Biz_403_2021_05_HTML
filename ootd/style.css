*{
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  }
  .container{
    max-width:1240px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 10fr auto auto 30px;
    grid-gap: 20px;
    
    /*
    화면의 전체적인 틀은 grid 를 이용하여 틀을 잡고
    grid 안에 있는 item 들의 내부는 flex를 이용하여
    구성할 예정
    */
    /*
    최대 크기 1240은 그냥 유지 그것보다 작아지면
    너비의 90%를 사용하겠다라는 의미 
    columns : 한 줄 씩 사용해라 
    rows auto : 안에 있는 콘텐츠 만큼 자동으로 나와라
    
    절반 화면 기준
    */
}
.container div{
  border: 1px solid black;
}

.card{
    background-color: green;
    background: #fff;
    text-decoration: none;
    color:#444;
    box-shadow: 0 2px 5px rgba(0,0,0,.1);
    display: flex;
    min-height: 100%;
    /* 부모 item에서의 높이를 100% 다 써라*/
    flex-direction: column;
    /* flex의 기본 값은 가로인데 그것을 세로로 바꿔라*/
    justify-content: space-between;
    /* 위 아래로 딱 붙게 만드는 것*/
    flex-wrap: nowrap;
   
}
.item-1{
  display: flex;
  flex-direction: column;
}
.log_join {
 justify-content: flex-end;
 
}
.log_join label:nth-of-type(1) {
  /*
  오른쪽 정렬 ?? 
  */

}
.item-2{
  display:grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: auto;

}
.w_1 {
  grid-column: 1/2;
}
.w_2{
  grid-column: 2/3;
}
.w_3{
  grid-column: 3/4;
  
}
.w_4{
  grid-column: 1/4;
  display:flex;
  text-align: center;

}
.w_4 div{
  flex:1;
  margin:3%;
}
.w_4_a {
  display: flex;
  flex-direction: column;
}
.item-3{
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows:auto;
  
}


@media screen and (min-width:970px){
    .container{
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 25fr 80fr 30px;
        
    }
    /*
    전체화면 기준은 화면을 절반을 나눈 형태
    ㅁㅁ
    ㅁㅁ
    이런 식으로 사용하겠다는 의미
    */
    .item-1{
        grid-column: 1/ 3;
        
        /*
        == grid-column: 1/ span 2;
        .item-1 은 첫번째 줄을 다 사용하겠다는 의미 
        head로 사용 예정
        */
    }
    
    .item-4{
        grid-column: 1/3;
        /*
        .item-4는 마지막 줄을 다 사용하겠다는 의미 
        footer로 사용 예정
        */
    }

}

/*
.thumb{
    
   height를 따로 지정해주지 않았지만 부모가 만들어준 높이안에서
      padding 60%를 사용해서 지정 ?? 
  background-size: cover;
   부모가 만들어준 높이를 cover 해라
  background-position: center center;
}
article{
  
  flex : 1 1 => 원래는 1 1 0 넘치는 걸 줄여서 쓰는 속성
  모자란 걸 늘려서 쓰는 속성 ??
  넘치는 모자른 속성을 채울 땐 flex : 1 ? 무슨 소린지 이해해보기 
 
  flex:1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 15px;
}
article p {
  flex:1;
}
